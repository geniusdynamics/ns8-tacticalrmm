#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# split port and set in env
port = os.environ["TCP_PORTS"].split(',')
agent.set_env("API_TCP_PORT", port[1])

#This is specific to you module, so you need to change it accordingly.

def generate_random_password(length):
    # Generate random bytes and convert them to a hexadecimal string
    random_bytes = os.urandom(length)
    password = random_bytes.hex()
    return password[:length]

# Configure POSTGRES DB

POSTGRES_DB = data.get('POSTGRES_DB', 'tacticalrmm')
POSTGRES_USER = data.get('POSTGRES_USER', 'tacticalrmm')
POSTGRES_PASSWORD = generate_random_password(16)

posgtres_config = {
    'POSTGRES_DB': POSTGRES_DB,
    'POSTGRES_USER': POSTGRES_USER,
    'POSTGRES_PASSWORD': POSTGRES_PASSWORD
}
agent.write_envfile("database.env", posgtres_config)


tactical_init = {
    "POSTGRES_USER": POSTGRES_USER,
    "POSTGRES_PASS": POSTGRES_PASSWORD,
}
agent.write_envfile("tactical-init-db.env", tactical_init)
# just before starting systemd unit
#agent.dump_env()
